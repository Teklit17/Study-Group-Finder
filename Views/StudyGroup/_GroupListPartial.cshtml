@model IEnumerable<SG_Finder.Models.StudyGroup>
@inject UserManager<SG_Finder.Models.ApplicationUser> UserManager

<div class="row">
    @foreach(var group in Model)
    {
        // var currentUserId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
        var currentUserId = UserManager.GetUserId(User);
        var isMember = group.GroupMembers.Any(m => m.ApplicationUserId == currentUserId);
        var isCreator = group.CreatorId == currentUserId;
        var hasPendingRequest = group.PendingMembers.Any(m => m.ApplicationUserId == currentUserId);

        <div class="col-md-4 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title group-name" style="cursor:pointer;" data-id="@group.Id">@group.GroupName</h5>
                    <div class="group-details" style="display:none;">
                        <p class="category-header">@group.Category</p>
                        <p class="card-text">@group.GroupDescription</p>
                        <p><strong>Group Members</strong> (Max: @group.MaxGroupMembers)<strong>:</strong></p>
                        <ul>
                            <li>
                                @if (group.CreatorId == currentUserId)
                                {
                                <b><em>@group.GroupMembers.FirstOrDefault(m => m.ApplicationUserId == group.CreatorId)?.ApplicationUser.UserName</em></b> <div class="creator">Creator</div>
                                }
                                else
                                {
                                <a href="@Url.Action("Chat", "Messages", new { receiverId = group.CreatorId })">
                                    <b><em>@group.GroupMembers.FirstOrDefault(m => m.ApplicationUserId == group.CreatorId)?.ApplicationUser.UserName</em></b>
                                </a> <div class="creator">Creator</div>
                                }
                            </li>
                            @foreach (var member in group.GroupMembers.Where(m => m.ApplicationUserId != group.CreatorId))
                            {
                            <li>
                                @if (member.ApplicationUserId == currentUserId)
                                {
                                @member.ApplicationUser.UserName
                                }
                                else
                                {
                                <a href="@Url.Action("Chat", "Messages", new { receiverId = member.ApplicationUserId })">
                                    @member.ApplicationUser.UserName
                                </a>
                                }
                                @if (isCreator)
                                {
                                <button class="RemoveMemberButton" data-group-id="@group.Id" data-user-id="@member.ApplicationUserId">Remove</button>
                                }
                            </li>
                            }
                        </ul>

                        <!-- Pending Requests Section -->
                        @if (isCreator && group.PendingMembers.Any())
                        {
                            <hr style="border: 1px solid #ccc; margin: 10px 0;" />
                            <p><strong>Pending Requests:</strong></p>
                            <ul>
                                @foreach (var pendingMember in group.PendingMembers)
                                {
                                    <li>
                                        @pendingMember.ApplicationUser.UserName
                                        <div class="creator-button-container">
                                        <button class="ApproveMemberButton" data-group-id="@group.Id" data-user-id="@pendingMember.ApplicationUserId">Approve</button>
                                        <button class="RejectMemberButton" data-group-id="@group.Id" data-user-id="@pendingMember.ApplicationUserId">Reject</button>
                                        </div>
                                    </li>
                                }
                            </ul>
                        }

                        <!-- Join or Leave Group Button -->
                        @if (!isCreator)
                        {
                            if (isMember)
                            {
                                <button class="btn btn-danger LeaveGroupButton" data-id="@group.Id">Leave @group.GroupName</button>
                            }
                            else if (hasPendingRequest)
                            {
                                <button class="btn btn-secondary" disabled>Request Pending</button>
                            }
                            else
                            {
                                <button class="btn btn-primary JoinGroupButton" data-id="@group.Id">
                                    @(group.RequiresApproval ? "Request to join " + @group.GroupName : "Join " + @group.GroupName)
                                </button>
                            }
                        }
                        
                        <!-- Delete Group Button -->
                        @if (isCreator)
                        {
                            <button class="btn btn-danger DeleteGroupButton" data-id="@group.Id">Delete @group.GroupName</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>