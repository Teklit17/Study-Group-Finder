@model SG_Finder.Models.MessageBellViewModel

<a class="nav-link text-dark position-relative dropdown-toggle" href="#" id="messagesDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="fas fa-envelope"></i>
    @if (Model.UnreadMessageCount > 0)
    {
        <span id="messageBadge" class="badge bg-danger">@Model.UnreadMessageCount</span>
    }
</a>

<ul class="dropdown-menu dropdown-menu-end" aria-labelledby="messagesDropdown">
    @if (Model.UnreadMessages.Any())
    {
        @foreach (var message in Model.UnreadMessages)
        {
            <li>
                <a class="dropdown-item" href="@Url.Action("Chat", "Messages", new { receiverId = message.SenderID })">
                    <strong>From:</strong> @(message.Sender?.Email ?? message.Sender?.UserName ?? "Unknown Sender") <br />
                    <span>@message.Content</span> <br />
                    <small class="text-muted">@message.SentDate.ToString("g")</small>
                </a>
            </li>
        }
    }
    else
    {
        <li>
            <span class="dropdown-item">No unread messages.</span>
        </li>
    }
</ul>

<script>
    // Remove the badge count when the dropdown is opened
    document.getElementById("messagesDropdown").addEventListener("click", function () {
        const badge = document.getElementById("messageBadge");
        if (badge) {
            badge.remove(); // Remove the badge from the DOM
        }
    });
</script>